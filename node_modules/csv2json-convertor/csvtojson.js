//csv2json node module
var fs=require('fs');

module.exports.csvtoarray=function (data, delimeter) {
  // Retrieve the delimeter
	  if (delimeter == undefined) 
	    delimeter = ',';
	  if (delimeter && delimeter.length > 1)
	    delimeter = ',';

	  // initialize variables
	  var new_line = '\n';
	  var EOF = '';
	  var i = 0;
	  var c = data.charAt(i);
	  var row = 0;
	  var col = 0;
	  var array = new Array();

	  while (c != EOF) {
	    // skip whitespaces
	    while (c == ' ' || c == '\t' || c == '\r') {
	      c = data.charAt(++i); // read next char
	    }
	    
	    // get value
	    var value = "";
	    if (c == '\"') {
	      // value enclosed by double-quotes
	      c = data.charAt(++i);
	      do {
	        if (c != '\"') {
	          // read a regular character and go to the next character
	          value += c;
	          c = data.charAt(++i);
	        }
	        if (c == '\"') {
	          // check for escaped double-quote
	          var cnext = data.charAt(i+1);
	        	if (cnext == '\"') {
	            // this is an escaped double-quote. 
	            // Add a double-quote to the value, and move two characters ahead.
	            value += '\"';
	            i += 2;
	            c = data.charAt(i);
	          }
	        }
	      }
	      while (c != EOF && c != '\"');
	      
	      if (c == EOF) {
	        throw "Unexpected end of data, double-quote expected";
	      }

	      c = data.charAt(++i);
	    }
	    else {
	      // value without quotes
	      while (c != EOF && c != delimeter && c!= new_line && c != '\t' && c != '\r') {
	        value += c;
	        c = data.charAt(++i);
	      }
	    }

	    // adding  value to the array
	    if (array.length <= row) 
	      array.push(new Array());
	    array[row].push(value);
	    
	    // Skipping  whitespaces
	    while (c == ' ' || c == '\t' || c == '\r') {
	      c = data.charAt(++i);
	    }

	    // going to the next row or column
	    if (c == delimeter) {
	      // to the next column
	      col++;
	    }
	    else if (c == new_line) {
	      // to the next row
	      col = 0;
	      row++;
	    }
	    else if (c != EOF) {
	      // unexpected character
	      throw "Delimiter expected after character " + i;
	    }
	    
	    // go to the next character
	    c = data.charAt(++i);
	  }  
	  
	  return array;
	};

//array to json convertor

module.exports.arraytojson=function (data){
		           var json_data="";
		            json_data+="["
		            for(var a=1;a<data.length;a++){
		                json_data+="{"
		                  	for(var b=0;b<data[a].length;b++){
		                      //console.log(a,b);
		                    	json_data += '"'+data[0][b]+'"'+":"+'"'+data[a][b]+'"';
		                    		if((data[a].length-b)>1){
		                        		json_data+=",";
		                        	}      //console.log(json_data);
		                    }
		                json_data+="}";
		                  	if((data.length-a)>1){
		                      	json_data+=",";
		                    }
		            }
		            json_data+="]"
		            //console.log(json_data);
		            var data1=JSON.parse(json_data);
		           

return data1;
	
}


//CSV TO JSON CONVERTOR FUNCTION
module.exports.csvtojson=function (filename){
		var data=fs.readFileSync(filename,'utf8');
		var array=this.csvtoarray(data);
		var jsondata=this.arraytojson(array);
		return jsondata;
};